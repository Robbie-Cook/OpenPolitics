{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Robbie\\\\Repos\\\\OpenPolitics\\\\src\\\\components\\\\typography\\\\Heading.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    width: fit-content;\\n    & * {\\n      align-self: center;\\n    }\\n    \", \";\\n    \", \";\\n  \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    font-size: 20px;\\n  \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    font-size: 25px;\\n  \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    font-size: 30px;\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    font-size: 40px;\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        \", \"\\n        font-size: \", \";\\n        line-height: \", \";\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Colors from \"../Colors\";\nimport Spacer from \"../Spacer\";\nimport Codify from \"../Codify\";\n/**\r\n *  Get appropriate heading\r\n *  Type: h1, h2, etc,\r\n *  Content: The child elements\r\n */\n\nfunction getHeading(props, type, className) {\n  var myStyles = \"\\n        font-family: \\\"Roboto Slab\\\", sans-serif;\\n        font-weight: bold;\\n        margin: \".concat(props.noMargin ? \"0px\" : props.margin, \";\\n        text-transform: lowercase;\\n        color: \").concat(Colors.text.color, \";\\n      \");\n  var h1Height = \"53px\";\n  var H1 = styled.h1(_templateObject(), myStyles, h1Height, h1Height); // H2 inherits and overrides styles from H1\n\n  var H2 = styled.h2(_templateObject2(), myStyles);\n  var H3 = styled.h3(_templateObject3(), myStyles);\n  var H4 = styled.h4(_templateObject4(), myStyles);\n  var H5 = styled.h5(_templateObject5(), myStyles);\n  var headingElementToUse = \"\"; // Probably should use TypeScript for this\n\n  if (type === \"h1\" || type === undefined) {\n    headingElementToUse = H1;\n  } else if (type === \"h2\") {\n    headingElementToUse = H2;\n  } else if (type === \"h3\") {\n    headingElementToUse = H3;\n  } else if (type === \"h4\") {\n    headingElementToUse = H4;\n  } else if (type === \"h5\") {\n    headingElementToUse = H5;\n  }\n\n  var headingElement = React.createElement(headingElementToUse, {\n    className: className\n  }, props.children);\n  return __jsx(React.Fragment, null, props.codify ? __jsx(Codify, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, headingElement) : headingElement);\n}\n/**\r\n * Heading section for a page\r\n * Should be used for all headings. Currently, only supports h1 and h2.\r\n * Example usage: <Heading type=\"h2\">My heading</Heading>\r\n */\n\n\nexport default function Heading(props) {\n  var HeadingWrapper = styled.div(_templateObject6(), props.center && \"align-self: center\", props.style);\n  return __jsx(HeadingWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, getHeading(props, props.type, props.className));\n}\nHeading.propTypes = {\n  type: PropTypes.string,\n  codify: PropTypes.bool,\n  style: PropTypes.string,\n  margin: PropTypes.string,\n  center: PropTypes.bool,\n  noMargin: PropTypes.bool\n};\nHeading.defaultProps = {\n  margin: \"0 0 20px 0;\",\n  center: false,\n  noMargin: false\n};","map":{"version":3,"sources":["C:\\Users\\Robbie\\Repos\\OpenPolitics\\src\\components\\typography\\Heading.js"],"names":["styled","React","Component","PropTypes","Colors","Spacer","Codify","getHeading","props","type","className","myStyles","noMargin","margin","text","color","h1Height","H1","h1","H2","h2","H3","h3","H4","h4","H5","h5","headingElementToUse","undefined","headingElement","createElement","children","codify","Heading","HeadingWrapper","div","center","style","propTypes","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import styled from \"styled-components\"\r\nimport React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Colors from \"../Colors\"\r\nimport Spacer from \"../Spacer\"\r\nimport Codify from \"../Codify\"\r\n\r\n/**\r\n *  Get appropriate heading\r\n *  Type: h1, h2, etc,\r\n *  Content: The child elements\r\n */\r\nfunction getHeading(props, type, className) {\r\n  const myStyles = `\r\n        font-family: \"Roboto Slab\", sans-serif;\r\n        font-weight: bold;\r\n        margin: ${props.noMargin ? \"0px\" : props.margin};\r\n        text-transform: lowercase;\r\n        color: ${Colors.text.color};\r\n      `\r\n\r\n  const h1Height = \"53px\"\r\n\r\n  const H1 = styled.h1`\r\n        ${myStyles}\r\n        font-size: ${h1Height};\r\n        line-height: ${h1Height};\r\n      `\r\n\r\n  // H2 inherits and overrides styles from H1\r\n  const H2 = styled.h2`\r\n    ${myStyles}\r\n    font-size: 40px;\r\n  `\r\n\r\n  const H3 = styled.h3`\r\n    ${myStyles}\r\n    font-size: 30px;\r\n  `\r\n\r\n  const H4 = styled.h4`\r\n    ${myStyles}\r\n    font-size: 25px;\r\n  `\r\n\r\n  const H5 = styled.h5`\r\n    ${myStyles}\r\n    font-size: 20px;\r\n  `\r\n\r\n  let headingElementToUse = \"\"\r\n\r\n  // Probably should use TypeScript for this\r\n  if (type === \"h1\" || type === undefined) {\r\n    headingElementToUse = H1\r\n  } else if (type === \"h2\") {\r\n    headingElementToUse = H2\r\n  } else if (type === \"h3\") {\r\n    headingElementToUse = H3\r\n  } else if (type === \"h4\") {\r\n    headingElementToUse = H4\r\n  } else if (type === \"h5\") {\r\n    headingElementToUse = H5\r\n  }\r\n\r\n  const headingElement = React.createElement(\r\n    headingElementToUse,\r\n    { className: className },\r\n    props.children\r\n  )\r\n\r\n  return (\r\n    <>{props.codify ? <Codify>{headingElement}</Codify> : headingElement}</>\r\n  )\r\n}\r\n\r\n/**\r\n * Heading section for a page\r\n * Should be used for all headings. Currently, only supports h1 and h2.\r\n * Example usage: <Heading type=\"h2\">My heading</Heading>\r\n */\r\nexport default function Heading(props) {\r\n  const HeadingWrapper = styled.div`\r\n    display: flex;\r\n    width: fit-content;\r\n    & * {\r\n      align-self: center;\r\n    }\r\n    ${props.center && \"align-self: center\"};\r\n    ${props.style};\r\n  `\r\n  return (\r\n    <HeadingWrapper>\r\n      {getHeading(\r\n        props,\r\n        props.type,\r\n        props.className,\r\n      )}\r\n    </HeadingWrapper>\r\n  )\r\n}\r\nHeading.propTypes = {\r\n  type: PropTypes.string,\r\n  codify: PropTypes.bool,\r\n  style: PropTypes.string,\r\n  margin: PropTypes.string,\r\n  center: PropTypes.bool,\r\n  noMargin: PropTypes.bool,\r\n}\r\nHeading.defaultProps = {\r\n  margin: \"0 0 20px 0;\",\r\n  center: false,\r\n  noMargin: false,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}