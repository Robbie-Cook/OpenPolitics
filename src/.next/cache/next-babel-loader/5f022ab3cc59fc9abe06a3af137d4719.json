{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport TransitionWrapper from \"../animation/TransitionWrapper\";\nexport function ProgressBar(props) {\n  const width = 300;\n  const ProgressBarWrapper = styled.div`\n    border: 8px solid white;\n    border-radius: 100px;\n    width: ${width}px;\n    height: 40px;\n  `;\n\n  var getProgressBarSectionRender = function (section) {} // const myWidth = (100 / width) * section.getPercent() \n  // var sections = (() => {\n  //   let jsx = []\n  //   props.sections.forEach((section) => {\n  //     jsx.append(getProgressBarSectionRender(section))\n  //   })\n  // })()\n  ;\n\n  return (// <ProgressBarWrapper>\n    //   {sections}\n    // </ProgressBarWrapper>\n    __jsx(React.Fragment, null)\n  );\n} // Represents a portion of the progress bar.\n// e.g index, percent, etc.\n\nexport function ProgressBarSectionData(index = 0, percent = 50, color = 'green') {\n  // The data which represents a section of the progress bar  \n  const data = {\n    index: index,\n    percent: percent,\n    color: color\n  };\n\n  let getIndex = function () {\n    return data.index;\n  };\n\n  let getPercent = function () {\n    return data.percent;\n  };\n\n  let getColor = function () {\n    return data.color;\n  };\n} // Given a precalculated width, gives a progress bar graphic\n// Internal function\n\nfunction ProgressBarSection(props) {\n  let styledProgressBarSection = styled.div`\n    e\n  `;\n  return;\n}\n\nProgressBar.defaultProps = {\n  sections: [new ProgressBarSectionData()]\n};","map":null,"metadata":{},"sourceType":"module"}