{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Robbie\\\\Repos\\\\OpenPolitics\\\\src\\\\components\\\\typography\\\\Link.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    font-family: \\\"Roboto\\\", sans-serif;\\n    color: \", \";\\n    \", \";\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Colors from \"../Colors\";\n/**\r\n *  Common components relating to text. This includes\r\n *  <Text> and <Heading>.\r\n */\n\nexport default function Link(props) {\n  var StyledLink = styled.a(_templateObject(), Colors.link.color, props.style);\n  return __jsx(StyledLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.children);\n}\nLink.defaultProps = {\n  style: \"\"\n};","map":{"version":3,"sources":["C:\\Users\\Robbie\\Repos\\OpenPolitics\\src\\components\\typography\\Link.js"],"names":["React","styled","Colors","Link","props","StyledLink","a","link","color","style","children","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA;;;;;AAIA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,MAAMC,UAAU,GAAGJ,MAAM,CAACK,CAAV,oBAELJ,MAAM,CAACK,IAAP,CAAYC,KAFP,EAGZJ,KAAK,CAACK,KAHM,CAAhB;AAKA,SAAO,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaL,KAAK,CAACM,QAAnB,CAAP;AACD;AACDP,IAAI,CAACQ,YAAL,GAAoB;AAClBF,EAAAA,KAAK,EAAE;AADW,CAApB","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Colors from \"../Colors\"\r\n\r\n/**\r\n *  Common components relating to text. This includes\r\n *  <Text> and <Heading>.\r\n */\r\nexport default function Link(props) {\r\n  const StyledLink = styled.a`\r\n    font-family: \"Roboto\", sans-serif;\r\n    color: ${Colors.link.color};\r\n    ${props.style};\r\n  `\r\n  return <StyledLink>{props.children}</StyledLink>\r\n}\r\nLink.defaultProps = {\r\n  style: \"\",\r\n}\r\n"]},"metadata":{},"sourceType":"module"}