{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robbie\\\\Repos\\\\OpenPolitics\\\\src\\\\components\\\\Layout.js\";\nvar __jsx = React.createElement;\n\n/**\r\n * A component which defines Row and Col for layout\r\n */\nimport styled from \"styled-components\";\nimport Colors from \"./Colors\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MobileView } from \"./Views\";\nconst LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n\n  ${new MobileView(`\n    flex-direction: column;\n  `)}\n`;\n/**\r\n * Represents a column\r\n * @param {*} props \r\n */\n\nfunction Col(props) {\n  const StyledCol = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0 40px 20px 0;\n    width: ${props.width};\n\n    ${new MobileView(`\n        width: 100%;\n      `)}\n  `;\n  return __jsx(StyledCol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.children);\n}\n\nCol.propTypes = {\n  width: PropTypes.string // Given as a string,\n  // not as a number, e.g. 50%\n\n};\nexport { Col, Row, LayoutWrapper };","map":{"version":3,"sources":["C:\\Users\\Robbie\\Repos\\OpenPolitics\\src\\components\\Layout.js"],"names":["styled","Colors","React","Component","PropTypes","MobileView","LayoutWrapper","div","Row","Col","props","StyledCol","width","children","propTypes","string"],"mappings":";;;AAAA;;;AAIA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAI;;;;CAAjC;AAMA,MAAMC,GAAG,GAAGR,MAAM,CAACO,GAAI;;;;;IAKnB,IAAIF,UAAJ,CAAgB;;GAAhB,CAEC;CAPL;AASA;;;;;AAIA,SAASI,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAMC,SAAS,GAAGX,MAAM,CAACO,GAAI;;;;aAIlBG,KAAK,CAACE,KAAM;;MAEnB,IAAIP,UAAJ,CAAgB;;OAAhB,CAEG;GARP;AAWA,SAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYK,KAAK,CAACG,QAAlB,CAAP;AACD;;AACDJ,GAAG,CAACK,SAAJ,GAAgB;AACdF,EAAAA,KAAK,EAAER,SAAS,CAACW,MADH,CACW;AACzB;;AAFc,CAAhB;AAKA,SAASN,GAAT,EAAcD,GAAd,EAAmBF,aAAnB","sourcesContent":["/**\r\n * A component which defines Row and Col for layout\r\n */\r\n\r\nimport styled from \"styled-components\"\r\nimport Colors from \"./Colors\"\r\nimport React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { MobileView } from \"./Views\"\r\n\r\nconst LayoutWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n\r\n  ${new MobileView(`\r\n    flex-direction: column;\r\n  `)}\r\n`\r\n/**\r\n * Represents a column\r\n * @param {*} props \r\n */\r\nfunction Col(props) {\r\n  const StyledCol = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 40px 20px 0;\r\n    width: ${props.width};\r\n\r\n    ${new MobileView(`\r\n        width: 100%;\r\n      `)}\r\n  `\r\n\r\n  return <StyledCol>{props.children}</StyledCol>\r\n}\r\nCol.propTypes = {\r\n  width: PropTypes.string, // Given as a string,\r\n  // not as a number, e.g. 50%\r\n}\r\n\r\nexport { Col, Row, LayoutWrapper }\r\n"]},"metadata":{},"sourceType":"module"}