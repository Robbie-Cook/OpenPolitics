{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Robbie\\\\Repos\\\\OpenPolitics\\\\src\\\\components\\\\animation\\\\TransitionWrapper.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    min-width: 100px;\\n    color: \", \";\\n    animation-name: spin;\\n    animation-duration: 2500ms;\\n    animation-iteration-count: infinite;\\n    animation-timing-function: linear;\\n\\n    @keyframes spin {\\n      from {\\n        transform: rotate(0deg);\\n      }\\n      to {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport posed from \"react-pose\";\nimport Colors from \"../Colors\";\nimport React, { PureComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\n/**\r\n * A loading screen\r\n */\n\nvar TransitionWrapper =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(TransitionWrapper, _PureComponent);\n\n  function TransitionWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, TransitionWrapper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransitionWrapper).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"PosedDiv\", posed.div({\n      visible: {\n        opacity: 1,\n        height: \"auto\"\n      },\n      hidden: {\n        opacity: 0,\n        height: \"0px\",\n        transition: {\n          \"default\": {\n            ease: \"linear\",\n            duration: 100\n          }\n        }\n      }\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"StyledDiv\", styled(_this.PosedDiv)(_templateObject()));\n\n    _defineProperty(_assertThisInitialized(_this), \"SpinnerWrapper\", styled.div(_templateObject2(), Colors.text.color));\n\n    return _this;\n  }\n\n  _createClass(TransitionWrapper, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(this.StyledDiv, {\n        pose: this.props.loaded ? \"hidden\" : \"visible\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(this.SpinnerWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(FontAwesomeIcon, {\n        style: {\n          fontSize: \"65px\",\n          display: \"flex\",\n          margin: \"auto\"\n        },\n        icon: faCircleNotch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))), __jsx(this.StyledDiv, {\n        pose: this.props.loaded ? \"visible\" : \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.children));\n    }\n  }]);\n\n  return TransitionWrapper;\n}(PureComponent);\n\nexport default TransitionWrapper;","map":{"version":3,"sources":["C:\\Users\\Robbie\\Repos\\OpenPolitics\\src\\components\\animation\\TransitionWrapper.js"],"names":["styled","posed","Colors","React","PureComponent","FontAwesomeIcon","faCircleNotch","TransitionWrapper","props","div","visible","opacity","height","hidden","transition","ease","duration","PosedDiv","text","color","loaded","fontSize","display","margin","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AAEA;;;;IAGMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;;AADiB,+DAIRP,KAAK,CAACQ,GAAN,CAAU;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,CADF;AAEPC,QAAAA,MAAM,EAAE;AAFD,OADU;AAKnBC,MAAAA,MAAM,EAAE;AACNF,QAAAA,OAAO,EAAE,CADH;AAENC,QAAAA,MAAM,EAAE,KAFF;AAGNE,QAAAA,UAAU,EAAE;AACV,qBAAS;AAAEC,YAAAA,IAAI,EAAE,QAAR;AAAkBC,YAAAA,QAAQ,EAAE;AAA5B;AADC;AAHN;AALW,KAAV,CAJQ;;AAAA,gEAkBPhB,MAAM,CAAC,MAAKiB,QAAN,CAlBC;;AAAA,qEAoBFjB,MAAM,CAACS,GApBL,qBAsBRP,MAAM,CAACgB,IAAP,CAAYC,KAtBJ;;AAAA;AAElB;;;;6BAoCQ;AACP,aACE,4BACE,WAAM,SAAN;AAAgB,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,MAAX,GAAoB,QAApB,GAA+B,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,WAAM,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,eAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,MAAZ;AAAoBC,UAAAA,OAAO,EAAE,MAA7B;AAAqCC,UAAAA,MAAM,EAAE;AAA7C,SADT;AAEE,QAAA,IAAI,EAAEjB,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EASE,WAAM,SAAN;AAAgB,QAAA,IAAI,EAAE,KAAKE,KAAL,CAAWY,MAAX,GAAoB,SAApB,GAAgC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWgB,QADd,CATF,CADF;AAeD;;;;EAvD6BpB,a;;AA0DhC,eAAeG,iBAAf","sourcesContent":["import styled from \"styled-components\"\r\nimport posed from \"react-pose\"\r\nimport Colors from \"../Colors\"\r\nimport React, { PureComponent } from \"react\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\n/**\r\n * A loading screen\r\n */\r\nclass TransitionWrapper extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  PosedDiv = posed.div({\r\n    visible: {\r\n      opacity: 1,\r\n      height: \"auto\",\r\n    },\r\n    hidden: {\r\n      opacity: 0,\r\n      height: \"0px\",\r\n      transition: {\r\n        default: { ease: \"linear\", duration: 100 },\r\n      },\r\n    },\r\n  })\r\n\r\n  StyledDiv = styled(this.PosedDiv)``\r\n\r\n  SpinnerWrapper = styled.div`\r\n    min-width: 100px;\r\n    color: ${Colors.text.color};\r\n    animation-name: spin;\r\n    animation-duration: 2500ms;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n\r\n    @keyframes spin {\r\n      from {\r\n        transform: rotate(0deg);\r\n      }\r\n      to {\r\n        transform: rotate(360deg);\r\n      }\r\n    }\r\n  `\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <this.StyledDiv pose={this.props.loaded ? \"hidden\" : \"visible\"}>\r\n          <this.SpinnerWrapper>\r\n            <FontAwesomeIcon\r\n              style={{ fontSize: \"65px\", display: \"flex\", margin: \"auto\" }}\r\n              icon={faCircleNotch}\r\n            />\r\n          </this.SpinnerWrapper>\r\n        </this.StyledDiv>\r\n        <this.StyledDiv pose={this.props.loaded ? \"visible\" : \"hidden\"}>\r\n          {this.props.children}\r\n        </this.StyledDiv>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TransitionWrapper\r\n"]},"metadata":{},"sourceType":"module"}