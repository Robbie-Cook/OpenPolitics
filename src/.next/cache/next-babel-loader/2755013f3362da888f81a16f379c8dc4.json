{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    width: fit-content;\\n    & * {\\n      align-self: center;\\n    }\\n    \", \";\\n    \", \";\\n  \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    font-size: 20px;\\n  \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    font-size: 25px;\\n  \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    font-size: 30px;\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"\\n    font-size: 40px;\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        \", \"\\n        font-size: \", \";\\n        line-height: \", \";\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport React, { Component } from \"react\";\nimport Colors from \"../Colors\";\nimport Spacer from \"../Spacer\";\nimport Codify from \"../Codify\";\n/**\r\n *  Get appropriate heading\r\n *  Type: h1, h2, etc,\r\n *  Content: The child elements\r\n */\n\nfunction getHeading(props, type, className) {\n  var myStyles = \"\\n        font-family: \\\"Roboto Slab\\\", sans-serif;\\n        font-weight: bold;\\n        margin: \".concat(props.noMargin ? \"0px\" : props.margin, \";\\n        text-transform: lowercase;\\n        color: \").concat(Colors.text.color, \";\\n      \");\n  var h1Height = \"53px\";\n  var H1 = styled.h1(_templateObject(), myStyles, h1Height, h1Height); // H2 inherits and overrides styles from H1\n\n  var H2 = styled.h2(_templateObject2(), myStyles);\n  var H3 = styled.h3(_templateObject3(), myStyles);\n  var H4 = styled.h4(_templateObject4(), myStyles);\n  var H5 = styled.h5(_templateObject5(), myStyles);\n  var headingElementToUse = \"\"; // Probably should use TypeScript for this\n\n  if (type === \"h1\" || type === undefined) {\n    headingElementToUse = H1;\n  } else if (type === \"h2\") {\n    headingElementToUse = H2;\n  } else if (type === \"h3\") {\n    headingElementToUse = H3;\n  } else if (type === \"h4\") {\n    headingElementToUse = H4;\n  } else if (type === \"h5\") {\n    headingElementToUse = H5;\n  }\n\n  var headingElement = React.createElement(headingElementToUse, {\n    className: className\n  }, props.children);\n  return __jsx(React.Fragment, null, props.codify ? __jsx(Codify, null, headingElement) : headingElement);\n}\n/**\r\n * Heading section for a page\r\n * Should be used for all headings. Currently, only supports h1 and h2.\r\n * Example usage: <Heading type=\"h2\">My heading</Heading>\r\n */\n\n\nexport default function Heading(props) {\n  var HeadingWrapper = styled.div(_templateObject6(), props.center && \"align-self: center\", props.style);\n  return __jsx(HeadingWrapper, null, getHeading(props, props.type, props.className));\n}\nHeading.defaultProps = {\n  margin: \"0 0 20px 0;\",\n  center: false,\n  noMargin: false\n};","map":null,"metadata":{},"sourceType":"module"}