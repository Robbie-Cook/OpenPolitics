{"ast":null,"code":"var __jsx = React.createElement;\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Colors from \"./Colors\";\nimport Sizes from \"./Sizes.js\";\nimport { MobileView, Sizes as ViewSizes } from \"./Views\";\nimport MyLink from \"./MyLink\";\nimport { Heading, Link } from \"./typography\";\nimport Spacer from \"./Spacer\";\n\nclass NavigationBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    /* CSS */\n    const StyledAppBar = withStyles({\n      root: {\n        backgroundColor: Colors.backgroundColor,\n        height: Sizes.navbar.height\n      }\n    })(AppBar);\n    const StyledTabs = withStyles({\n      root: {\n        // Not ideal, should be done with breakpoints in theme\n        // re: https://stackoverflow.com/questions/45847090/media-queries-in-material-ui-components\n        [`@media (max-width:${ViewSizes.mobileSize}px)`]: {\n          display: \"none\"\n        }\n      }\n    })(Tabs);\n    const StyledToolbar = styled(Toolbar)`\n      z-index: 150;\n      margin-left: 0;\n      padding: 0;\n      height: ${Sizes.navbar.height};\n      ${new MobileView(`\n        margin-left: 20px;\n      `)};\n    `;\n    let navigationLinks = [new MyLink(\"Home\", \"/\"), new MyLink(\"News\", \"/news\")];\n    let heading = \"Open Politics\";\n    return __jsx(StyledAppBar, {\n      position: \"static\",\n      color: \"primary\",\n      colorPrimary: true\n    }, __jsx(StyledToolbar, null, heading && __jsx(React.Fragment, null, __jsx(Heading, {\n      type: \"h3\",\n      margin: \"0\"\n    }, heading), __jsx(Spacer, {\n      width: \"56px\"\n    })), __jsx(StyledTabs, null, (() => {\n      let array = [];\n      let LinkContainer = styled.div`\n                margin-right: 30px;\n              `;\n      navigationLinks.map(item => {\n        // If the current URL is the same as the item path, mark Tab as active\n        array.push(__jsx(LinkContainer, null, __jsx(Link, {\n          style: `\n                          line-height: ${Sizes.navbar.height};\n                          position: relative;\n                          bottom: -5px;\n                          color: ${Colors.text.color}\n                        `\n        }, item.name)));\n      });\n      return array;\n    })())));\n  }\n\n}\n\nexport default NavigationBar;","map":null,"metadata":{},"sourceType":"module"}