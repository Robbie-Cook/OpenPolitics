{"ast":null,"code":"var __jsx = React.createElement;\n\n/**\r\n *  A styling component, which puts < /> tags around its children\r\n */\nimport React, { Component } from \"react\";\nimport Spacer from \"./Spacer\";\nimport styled from \"styled-components\";\nimport Colors from \"./Colors\";\n/** Icons to display with text */\n\nclass TextIcon extends Component {\n  render() {\n    return __jsx(React.Fragment, null, this.props.content);\n  }\n\n}\n\nclass Codify extends Component {\n  render() {\n    const Wrapper = styled.div`\n      display: flex;\n      align-items: center;\n    `;\n    /* \r\n      Icons currently hard-coded, but should be passed as a prop if \r\n      custom icons are needed for headers \r\n     */\n\n    const MyIcon = styled.span`\n      font-size: ${this.props.fontSize};\n      font-weight: bold;\n      font-family: \"Roboto Slab\", sans-serif;\n      color: ${this.props.color};\n      opacity: ${this.props.opacity};\n    `;\n\n    const leftIcon = __jsx(MyIcon, null, \"<\");\n\n    const rightIcon = __jsx(React.Fragment, null, __jsx(Spacer, {\n      width: this.props.rightTagSpacing\n    }), __jsx(MyIcon, null, \" />\"));\n\n    return __jsx(Wrapper, null, __jsx(TextIcon, {\n      position: \"left\",\n      content: leftIcon\n    }), this.props.children, __jsx(TextIcon, {\n      position: \"right\",\n      content: rightIcon\n    }));\n  }\n\n}\n\nCodify.defaultProps = {\n  color: Colors.page.secondaryColor,\n  fontSize: \"69px\",\n  rightTagSpacing: \"13px\",\n  opacity: \"1\"\n};\nexport default Codify;","map":null,"metadata":{},"sourceType":"module"}