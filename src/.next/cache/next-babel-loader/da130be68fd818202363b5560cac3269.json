{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      font-size: \", \";\\n      font-weight: bold;\\n      font-family: \\\"Roboto Slab\\\", sans-serif;\\n      color: \", \";\\n      opacity: \", \";\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      display: flex;\\n      align-items: center;\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**\r\n *  A styling component, which puts < /> tags around its children\r\n */\nimport React, { Component } from \"react\";\nimport Spacer from \"./Spacer\";\nimport styled from \"styled-components\";\nimport Colors from \"./Colors\";\n/** Icons to display with text */\n\nvar TextIcon =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextIcon, _Component);\n\n  function TextIcon() {\n    _classCallCheck(this, TextIcon);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TextIcon).apply(this, arguments));\n  }\n\n  _createClass(TextIcon, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, this.props.content);\n    }\n  }]);\n\n  return TextIcon;\n}(Component);\n\nvar Codify =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Codify, _Component2);\n\n  function Codify() {\n    _classCallCheck(this, Codify);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Codify).apply(this, arguments));\n  }\n\n  _createClass(Codify, [{\n    key: \"render\",\n    value: function render() {\n      var Wrapper = styled.div(_templateObject());\n      /* \r\n        Icons currently hard-coded, but should be passed as a prop if \r\n        custom icons are needed for headers \r\n       */\n\n      var MyIcon = styled.span(_templateObject2(), this.props.fontSize, this.props.color, this.props.opacity);\n\n      var leftIcon = __jsx(MyIcon, null, \"<\");\n\n      var rightIcon = __jsx(React.Fragment, null, __jsx(Spacer, {\n        width: this.props.rightTagSpacing\n      }), __jsx(MyIcon, null, \" />\"));\n\n      return __jsx(Wrapper, null, __jsx(TextIcon, {\n        position: \"left\",\n        content: leftIcon\n      }), this.props.children, __jsx(TextIcon, {\n        position: \"right\",\n        content: rightIcon\n      }));\n    }\n  }]);\n\n  return Codify;\n}(Component);\n\nCodify.defaultProps = {\n  color: Colors.page.secondaryColor,\n  fontSize: \"69px\",\n  rightTagSpacing: \"13px\",\n  opacity: \"1\"\n};\nexport default Codify;","map":null,"metadata":{},"sourceType":"module"}