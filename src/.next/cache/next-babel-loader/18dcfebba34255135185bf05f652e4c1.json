{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                margin-right: 30px;\\n              \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      z-index: 150;\\n      margin-left: 0;\\n      padding: 0;\\n      height: \", \";\\n      \", \";\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Colors from \"./Colors\";\nimport Sizes from \"./Sizes.js\";\nimport { MobileView, Sizes as ViewSizes } from \"./Views\";\nimport MyLink from \"./MyLink\";\nimport { Heading, Link } from \"./typography\";\nimport Spacer from \"./Spacer\";\n\nvar NavigationBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NavigationBar, _React$Component);\n\n  function NavigationBar(props) {\n    _classCallCheck(this, NavigationBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NavigationBar).call(this, props));\n  }\n\n  _createClass(NavigationBar, [{\n    key: \"render\",\n    value: function render() {\n      /* CSS */\n      var StyledAppBar = withStyles({\n        root: {\n          backgroundColor: Colors.backgroundColor,\n          height: Sizes.navbar.height\n        }\n      })(AppBar);\n      var StyledTabs = withStyles({\n        root: _defineProperty({}, \"@media (max-width:\".concat(ViewSizes.mobileSize, \"px)\"), {\n          display: \"none\"\n        })\n      })(Tabs);\n      var StyledToolbar = styled(Toolbar)(_templateObject(), Sizes.navbar.height, new MobileView(\"\\n        margin-left: 20px;\\n      \"));\n      var navigationLinks = [new MyLink(\"Home\", \"/\"), new MyLink(\"News\", \"/news\")];\n      var heading = \"Open Politics\";\n      return __jsx(StyledAppBar, {\n        position: \"static\",\n        color: \"primary\",\n        colorPrimary: true\n      }, __jsx(StyledToolbar, null, heading && __jsx(React.Fragment, null, __jsx(Heading, {\n        type: \"h3\",\n        margin: \"0\"\n      }, heading), __jsx(Spacer, {\n        width: \"56px\"\n      })), __jsx(StyledTabs, null, function () {\n        var array = [];\n        var LinkContainer = styled.div(_templateObject2());\n        navigationLinks.map(function (item) {\n          // If the current URL is the same as the item path, mark Tab as active\n          array.push(__jsx(LinkContainer, null, __jsx(Link, {\n            style: \"\\n                          line-height: \".concat(Sizes.navbar.height, \";\\n                          position: relative;\\n                          bottom: -5px;\\n                          color: \").concat(Colors.text.color, \"\\n                        \")\n          }, item.name)));\n        });\n        return array;\n      }())));\n    }\n  }]);\n\n  return NavigationBar;\n}(React.Component);\n\nexport default NavigationBar;","map":null,"metadata":{},"sourceType":"module"}