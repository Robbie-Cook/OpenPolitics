{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Robbie\\\\Repos\\\\OpenPolitics\\\\src\\\\components\\\\politics\\\\ParliamentGraphic.js\";\nvar __jsx = React.createElement;\nimport React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Transition } from \"@robbie-cook/react-components\";\nimport MemberPage from \"./MemberPage\";\nimport Colors from \"../Colors\";\n\nfunction Seat(props) {\n  const StyledSeat = styled.div`\n    width: ${props.size};\n    height: ${props.size};\n    background-color: ${props.color};\n    border-radius: 100%;\n    margin: 5px;\n    flex-shrink: 0;\n    position: absolute;\n    bottom: ${props.position[0]}px;\n    left: ${props.position[1]}px;\n  `;\n  return __jsx(StyledSeat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n}\n\nSeat.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.string,\n  id: PropTypes.number,\n  position: PropTypes.arrayOf(PropTypes.number)\n};\nSeat.defaultProps = {\n  color: Colors.text.color,\n  size: \"14px\",\n  id: 0,\n  position: [0, 0] // ParliamentGraphic component\n\n};\n\nclass ParliamentGraphic extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"size\", \"300px\");\n\n    _defineProperty(this, \"StyledSeatWrapper\", styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    position: relative;\n    width: ${this.size};\n    height: ${this.size};\n  `);\n\n    this.state = {\n      seatingData: null,\n      membersData: null,\n      partyData: null // Updating functions bound to this\n\n    };\n\n    var updateSeatingData = function (data) {\n      this.setState({\n        seatingData: data\n      });\n    }.bind(this);\n\n    var updateMembersData = function (data) {\n      this.setState({\n        membersData: data\n      });\n    }.bind(this);\n\n    var updatePartyData = function (data) {\n      this.setState({\n        partyData: data\n      });\n    }.bind(this); // Queries for the data\n    // TODO: implement queries to API e.g. api.robbie.pw/politics/members\n\n  }\n\n  generateSeats(seatingData) {\n    if (!seatingData) {\n      return;\n    }\n\n    let jsxArray = [];\n    seatingData.docs.forEach(element => jsxArray.push(__jsx(Seat, {\n      id: element.id,\n      position: element.position,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n    return jsxArray;\n  }\n\n  render() {\n    return __jsx(Transition, {\n      loaded: this.state.seatingData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(this.StyledSeatWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.generateSeats(this.state.seatingData, this.positions)));\n  }\n\n}\n\nexport default ParliamentGraphic;","map":{"version":3,"sources":["C:\\Users\\Robbie\\Repos\\OpenPolitics\\src\\components\\politics\\ParliamentGraphic.js"],"names":["React","Component","PureComponent","PropTypes","styled","Transition","MemberPage","Colors","Seat","props","StyledSeat","div","size","color","position","propTypes","string","id","number","arrayOf","defaultProps","text","ParliamentGraphic","constructor","state","seatingData","membersData","partyData","updateSeatingData","data","setState","bind","updateMembersData","updatePartyData","generateSeats","jsxArray","docs","forEach","element","push","render","positions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,UAAU,GAAGN,MAAM,CAACO,GAAI;aACnBF,KAAK,CAACG,IAAK;cACVH,KAAK,CAACG,IAAK;wBACDH,KAAK,CAACI,KAAM;;;;;cAKtBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAkB;YACpBL,KAAK,CAACK,QAAN,CAAe,CAAf,CAAkB;GAT5B;AAWA,SAAO,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AACDN,IAAI,CAACO,SAAL,GAAiB;AACfF,EAAAA,KAAK,EAAEV,SAAS,CAACa,MADF;AAEfJ,EAAAA,IAAI,EAAET,SAAS,CAACa,MAFD;AAGfC,EAAAA,EAAE,EAAEd,SAAS,CAACe,MAHC;AAIfJ,EAAAA,QAAQ,EAAEX,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACe,MAA5B;AAJK,CAAjB;AAMAV,IAAI,CAACY,YAAL,GAAoB;AAClBP,EAAAA,KAAK,EAAEN,MAAM,CAACc,IAAP,CAAYR,KADD;AAElBD,EAAAA,IAAI,EAAE,MAFY;AAGlBK,EAAAA,EAAE,EAAE,CAHc;AAIlBH,EAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJQ,CAOpB;;AAPoB,CAApB;;AAQA,MAAMQ,iBAAN,SAAgCrB,SAAhC,CAA0C;AACxCsB,EAAAA,WAAW,CAACd,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,kCAqCZ,OArCY;;AAAA,+CAsCCL,MAAM,CAACO,GAAI;;;;;aAKpB,KAAKC,IAAK;cACT,KAAKA,IAAK;GA5CH;;AAEjB,SAAKY,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,IADF;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXC,MAAAA,SAAS,EAAE,IAHA,CAMb;;AANa,KAAb;;AAOA,QAAIC,iBAAiB,GAAG,UAASC,IAAT,EAAe;AACrC,WAAKC,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAEI;AAAf,OAAd;AACD,KAFuB,CAEtBE,IAFsB,CAEjB,IAFiB,CAAxB;;AAIA,QAAIC,iBAAiB,GAAG,UAASH,IAAT,EAAe;AACrC,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAEG;AAAf,OAAd;AACD,KAFuB,CAEtBE,IAFsB,CAEjB,IAFiB,CAAxB;;AAIA,QAAIE,eAAe,GAAG,UAASJ,IAAT,EAAe;AACnC,WAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAEE;AAAb,OAAd;AACD,KAFqB,CAEpBE,IAFoB,CAEf,IAFe,CAAtB,CAjBiB,CAqBjB;AACA;;AACD;;AAEDG,EAAAA,aAAa,CAACT,WAAD,EAAc;AACzB,QAAI,CAACA,WAAL,EAAkB;AAChB;AACD;;AAED,QAAIU,QAAQ,GAAG,EAAf;AACAV,IAAAA,WAAW,CAACW,IAAZ,CAAiBC,OAAjB,CAAyBC,OAAO,IAC9BH,QAAQ,CAACI,IAAT,CAAc,MAAC,IAAD;AAAM,MAAA,EAAE,EAAED,OAAO,CAACrB,EAAlB;AAAsB,MAAA,QAAQ,EAAEqB,OAAO,CAACxB,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CADF;AAGA,WAAOqB,QAAP;AACD;;AAYDK,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,WAAM,iBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKS,aAAL,CAAmB,KAAKV,KAAL,CAAWC,WAA9B,EAA2C,KAAKgB,SAAhD,CADH,CADF,CADF;AAOD;;AAxDuC;;AA2D1C,eAAenB,iBAAf","sourcesContent":["import React, { Component, PureComponent } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\nimport { Transition } from \"@robbie-cook/react-components\"\r\nimport MemberPage from \"./MemberPage\"\r\nimport Colors from \"../Colors\"\r\n\r\nfunction Seat(props) {\r\n  const StyledSeat = styled.div`\r\n    width: ${props.size};\r\n    height: ${props.size};\r\n    background-color: ${props.color};\r\n    border-radius: 100%;\r\n    margin: 5px;\r\n    flex-shrink: 0;\r\n    position: absolute;\r\n    bottom: ${props.position[0]}px;\r\n    left: ${props.position[1]}px;\r\n  `\r\n  return <StyledSeat />\r\n}\r\nSeat.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  id: PropTypes.number,\r\n  position: PropTypes.arrayOf(PropTypes.number)\r\n}\r\nSeat.defaultProps = {\r\n  color: Colors.text.color,\r\n  size: \"14px\",\r\n  id: 0,\r\n  position: [0, 0]\r\n}\r\n\r\n// ParliamentGraphic component\r\nclass ParliamentGraphic extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      seatingData: null,\r\n      membersData: null,\r\n      partyData: null,\r\n    }\r\n    \r\n    // Updating functions bound to this\r\n    var updateSeatingData = function(data) {\r\n      this.setState({ seatingData: data })\r\n    }.bind(this)\r\n\r\n    var updateMembersData = function(data) {\r\n      this.setState({ membersData: data })\r\n    }.bind(this)\r\n\r\n    var updatePartyData = function(data) {\r\n      this.setState({ partyData: data })\r\n    }.bind(this)\r\n\r\n    // Queries for the data\r\n    // TODO: implement queries to API e.g. api.robbie.pw/politics/members\r\n  }\r\n\r\n  generateSeats(seatingData) {\r\n    if (!seatingData) {\r\n      return\r\n    }\r\n\r\n    let jsxArray = []\r\n    seatingData.docs.forEach(element =>\r\n      jsxArray.push(<Seat id={element.id} position={element.position} />)\r\n    )\r\n    return jsxArray\r\n  }\r\n\r\n  size = \"300px\"\r\n  StyledSeatWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n    width: ${this.size};\r\n    height: ${this.size};\r\n  `\r\n\r\n  render() {\r\n    return (\r\n      <Transition loaded={this.state.seatingData}>\r\n        <this.StyledSeatWrapper>\r\n          {this.generateSeats(this.state.seatingData, this.positions)}\r\n        </this.StyledSeatWrapper>\r\n      </Transition>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ParliamentGraphic\r\n"]},"metadata":{},"sourceType":"module"}