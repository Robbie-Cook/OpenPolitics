{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    e\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 8px solid white;\\n    border-radius: 100px;\\n    width: \", \"px;\\n    height: 40px;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport TransitionWrapper from \"../animation/TransitionWrapper\";\nexport function ProgressBar(props) {\n  var width = 300;\n  var ProgressBarWrapper = styled.div(_templateObject(), width);\n\n  var getProgressBarSectionRender = function getProgressBarSectionRender(section) {} // const myWidth = (100 / width) * section.getPercent() \n  // var sections = (() => {\n  //   let jsx = []\n  //   props.sections.forEach((section) => {\n  //     jsx.append(getProgressBarSectionRender(section))\n  //   })\n  // })()\n  ;\n\n  return (// <ProgressBarWrapper>\n    //   {sections}\n    // </ProgressBarWrapper>\n    __jsx(React.Fragment, null)\n  );\n} // Represents a portion of the progress bar.\n// e.g index, percent, etc.\n\nexport function ProgressBarSectionData() {\n  var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var percent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'green';\n  // The data which represents a section of the progress bar  \n  var data = {\n    index: index,\n    percent: percent,\n    color: color\n  };\n\n  var getIndex = function getIndex() {\n    return data.index;\n  };\n\n  var getPercent = function getPercent() {\n    return data.percent;\n  };\n\n  var getColor = function getColor() {\n    return data.color;\n  };\n} // Given a precalculated width, gives a progress bar graphic\n// Internal function\n\nfunction ProgressBarSection(props) {\n  var styledProgressBarSection = styled.div(_templateObject2());\n  return;\n}\n\nProgressBar.defaultProps = {\n  sections: [new ProgressBarSectionData()]\n};","map":null,"metadata":{},"sourceType":"module"}